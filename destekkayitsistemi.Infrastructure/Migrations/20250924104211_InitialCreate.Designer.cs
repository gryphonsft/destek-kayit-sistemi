// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using destek_kayit_sistemi.destek_kayit_sistemi.Infrastructure.Data;

#nullable disable

namespace destekkayitsistemi.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250924104211_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Devices", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("DeviceId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Personel"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Kullanıcı"
                        });
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Tickets", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("assigned_to_user_id")
                        .HasColumnType("int");

                    b.Property<string>("category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("closed_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("assigned_to_user_id");

                    b.HasIndex("user_id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.User_Devices", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("UserId", "DeviceId");

                    b.HasIndex("DeviceId");

                    b.ToTable("User_Devices");
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "123",
                            RoleId = 1,
                            Username = "abdullah"
                        });
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Tickets", b =>
                {
                    b.HasOne("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Users", "AssignedToUser")
                        .WithMany("AssignedTickets")
                        .HasForeignKey("assigned_to_user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Users", "Users")
                        .WithMany("CreatedTickets")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedToUser");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.User_Devices", b =>
                {
                    b.HasOne("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Devices", "Devices")
                        .WithMany("User_Devices")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Users", "Users")
                        .WithMany("User_Devices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Devices");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Users", b =>
                {
                    b.HasOne("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Devices", b =>
                {
                    b.Navigation("User_Devices");
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("destek_kayit_sistemi.destek_kayit_sistemi.Domain.Entities.Users", b =>
                {
                    b.Navigation("AssignedTickets");

                    b.Navigation("CreatedTickets");

                    b.Navigation("User_Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
